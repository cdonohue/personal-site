---
export interface Props {
  bg?: string
  stroke?: string
  top?: boolean
  bottom?: boolean
}

const { bg, stroke, top, bottom } = Astro.props
---

<div>
  <svg
    class:list={['waves', { top, bottom }]}
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    viewBox="0 24 150 28"
    preserveAspectRatio="none"
    shape-rendering="auto"
  >
    <defs>
      <path
        id="wave"
        d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"
      ></path>
      <filter id="shadow" color-interpolation-filters="sRGB">
        <feDropShadow dx="0" dy="2" stdDeviation="4" flood-opacity="0.15"
        ></feDropShadow>
      </filter>
    </defs>
    <g class="parallax">
      <use xlink:href="#wave" x="88" y="0" filter="url(#shadow)"></use>
      <use xlink:href="#wave" x="64" y="3" filter="url(#shadow)"></use>
      <use xlink:href="#wave" x="48" y="5" filter="url(#shadow)"></use>
      <use xlink:href="#wave" x="24" y="7" filter="url(#shadow)"></use>
    </g>
  </svg>
</div>
<style define:vars={{ bg, stroke }}>
  .waves {
    position: relative;
    width: 100%;
    height: 10rem;
    margin-bottom: -7px; /*Fix for safari gap*/
    min-height: 50px;
    max-height: 50px;
    translate: 0 4px;
  }

  svg.bottom {
    rotate: 180deg;
    translate: 0 -4px;
  }

  .parallax > * {
    fill: var(--bg, var(--surface-2));
    stroke-width: 1px;
    stroke: var(--stroke, var(--surface-3));
  }

  .parallax > use {
    animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;
  }
  .parallax > use:nth-child(1) {
    animation-delay: -2s;
    animation-duration: 7s;
    opacity: 0.3;
  }
  .parallax > use:nth-child(2) {
    animation-delay: -3s;
    animation-duration: 10s;
    opacity: 0.5;
  }
  .parallax > use:nth-child(3) {
    animation-delay: -4s;
    animation-duration: 13s;
    opacity: 0.7;
  }
  .parallax > use:nth-child(4) {
    animation-delay: -5s;
    animation-duration: 20s;
    opacity: 1;
  }
  @keyframes move-forever {
    0% {
      transform: translate3d(-90px, 0, 0);
    }
    100% {
      transform: translate3d(85px, 0, 0);
    }
  }
  @media (max-width: 900px) {
    .parallax > use {
      animation: none;
    }
  }
</style>
