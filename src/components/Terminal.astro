---
interface Frontmatter {
  companyName: string
  title: string
  startDate: string
  endDate?: string
  website: string
  slug: string
}

function shouldPluralize(count: number) {
  return count > 1
}

function pluralizeYears(numYears: number) {
  return shouldPluralize(numYears) ? 'years' : 'year'
}

function pluralizeMonths(numMonths: number) {
  return shouldPluralize(numMonths) ? 'months' : 'month'
}

const experience = (
  await Astro.glob<Frontmatter>('../md/experience/*.md')
).sort(
  (a, b) =>
    new Date(b.frontmatter.startDate) - new Date(a.frontmatter.startDate)
)

const dateFormatter = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'short',
})

function getDateDifference(startDate: string, endDate: string | null = null) {
  const start = new Date(startDate)
  const end = endDate ? new Date(endDate) : new Date()

  const startYear = start.getFullYear()
  const startMonth = start.getMonth()
  const endYear = end.getFullYear()
  const endMonth = end.getMonth()

  let yearDiff = endYear - startYear
  let monthDiff = endMonth - startMonth

  if (monthDiff < 0) {
    yearDiff--
    monthDiff += 12
  }

  let result = ''

  if (yearDiff !== 0) {
    result += `${yearDiff} year${yearDiff !== 1 ? 's' : ''}`
  }

  if (monthDiff !== 0) {
    result += `${yearDiff !== 0 ? ' ' : ''}${monthDiff} month${
      monthDiff !== 1 ? 's' : ''
    }`
  }

  return result
}
---

<>
  <div class="terminal flow">
    <section>
      <div class="line">EXPERIENCE</div>
    </section>
    {
      experience.map((company, i) => (
        <div class="experience-entry">
          <div class="company-info">
            <div class="companyName">
              <a href={`/about/${company.frontmatter.slug}`}>
                {company.frontmatter.companyName}
              </a>
            </div>
            <div class="title">{company.frontmatter.title}</div>
            <div class="tenure">
              {dateFormatter.format(new Date(company.frontmatter.startDate))} -{' '}
              {company.frontmatter.endDate
                ? dateFormatter.format(new Date(company.frontmatter.endDate))
                : 'present'}{' '}
            </div>
            <div>{`${getDateDifference(
              company.frontmatter.startDate,
              company.frontmatter.endDate
            )}`}</div>
          </div>
        </div>
      ))
    }
  </div>
  <div class="terminal flow">
    <section>
      <div class="line">
        Download CV -> <a
          href="https://docs.google.com/document/d/1A_Q7-BupfmD1diMNcmR84CQIwv5HbclbLCY1V1NN0sA/edit?usp=sharing"
        >
          Click here</a
        >
      </div>
    </section>
  </div>
</>

<style>
  .terminal {
    --flow-space: var(--space-m);
    font-size: var(--size-step-0);
    background-color: var(--surface-1);
    color: var(--color-fg);
    padding: var(--space-m);
    border-radius: var(--border-radius);
    font-family: var(--font-mono);
    box-shadow: 0 10px 15px -3px rgb(var(--dark-raw) / 0.1),
      0 4px 6px -4px rgb(var(--dark-raw) / 0.1);
    margin-top: var(--space-l);
  }
  section .line {
    /* line-height: 0.5; */
  }
</style>
