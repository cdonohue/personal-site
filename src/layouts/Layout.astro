---
import Nav from '../components/Nav.astro'
import '../styles/reset.css'
import '../styles/typography.css'
import '../styles/tokens.css'
import Waves from '../components/Waves.astro'
import Footer from '../components/Footer.astro'

export interface Props {
  title: string
}

const { title } = Astro.props
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{`${title} / Chad Donohue`}</title>
    <meta
      name="description"
      content="I'm Chad Donohue. I build user experiences and lead engineering teams."
    />
    <meta name="theme-color" content="#f97316" />
    <meta
      name="theme-color"
      content="#2563eb"
      media="(prefers-color-scheme: dark)"
    />
  </head>
  <body>
    <slot />
    <Footer />
  </body>
  <!-- <script>
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        console.log(entry)
        if (entry.isIntersecting) {
          entry.target.classList.add('show')
        } else {
          entry.target.classList.remove('show')
        }
      })
    })

    const hiddenElements = document.querySelectorAll('.hidden')
    hiddenElements.forEach((el) => observer.observe(el))
  </script> -->
  <style is:global>
    .u-container {
      max-width: var(--grid-max-width);
      padding-inline: var(--grid-gutter);
      margin-inline: auto;
    }

    .u-grid {
      display: grid;
      gap: var(--grid-gutter);
    }

    body {
      background: var(--color-bg, #f0f0f0);
      color: var(--color-fg, #222);
      display: grid;
      grid-template-rows: 1fr auto;
      min-height: 100vh;
      min-height: 100dvh;
    }

    .flow > * + * {
      margin-top: var(--flow-space, 1em);
    }

    .headline {
      text-shadow: 2px 2px 2px rgb(var(--bg-raw) / 0.4);
      color: var(--text-1);
    }

    .subtitle {
      font-size: var(--size-step-2);
      text-align: center;
      margin-inline: auto;
      font-weight: 400;
    }

    .region {
      padding-bottom: var(--region-space-bottom, var(--space-l-2xl));
      padding-top: var(--region-space-top, var(--space-l-2xl));
    }

    .wrapper {
      margin-left: auto;
      margin-right: auto;
      max-width: var(--wrapper-max-width, 85rem);
      padding-left: var(--gutter);
      padding-right: var(--gutter);
    }

    .sr-only {
      clip: rect(0, 0, 0, 0);
      border-width: 0;
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      white-space: nowrap;
      width: 1px;
    }

    .text-accent {
      color: var(--color-accent);
    }

    a[href] {
      color: var(--color-accent);
    }

    .hidden {
      opacity: 0;
      transition: all 0.2s ease-in-out;
    }

    .show {
      opacity: 1;
    }
  </style>
</html>
